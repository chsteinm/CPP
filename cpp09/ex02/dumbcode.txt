
- parsing :
	- check error (que des entiers positifs en parametre)
	- mettre les entier dans un vecteur et dans un deque

- afficher premiere ligne

- lancer le compteur pour le vecteur 

- recursive pair + swap
- binary shearch insertion sort :
	- separer grand petit \ main pend + impaire + qui rentre pas dans une paire 
	- commencer par les index de la suite de jacob s'il y en a (a partir de 3)
	- revenir sur ceux qu'on a passer (ex: le 2 si on est aller au 3)
	- finir par l'impaire s'il y en a 
	- redescendre en recursive

- afficher la deuxieme + troisieme lignes

- remettre compteur a zero pour le deque
- refaire l'algo
- affichier la 4e ligne 


3 2 9 6 5 4 1 8

| 32 96 54 18
| 23 69 45 18

|| 2369 4518
|| 4518 2369

| 45 18 23 69

| 23
| 45 18 69

| 23 45 18 69

2 3 4 5 1 8 6 9

4 1 6
2 3 5 8 9

2 3 4 5 8 9
1 2 3 4 5 8 9
1 2 3 4 5 6 8 9


zero (jump = 1)
[9] [4] [8] [6] [7] [2] [11] [1] [2] [3] (5)

un (j = 2)
[4 9]  [6 8]  [2 7]  [1 11]  (2 3)  5 

deux (j = 4)
[6 8  4 9]  [2 7  1 11]  (2 3 5)